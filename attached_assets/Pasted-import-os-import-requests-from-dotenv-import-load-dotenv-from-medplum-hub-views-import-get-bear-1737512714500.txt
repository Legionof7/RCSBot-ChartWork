import os
import requests
from dotenv import load_dotenv



# from medplum_hub.views import get_bearer_token

load_dotenv()

API_KEY = os.getenv("ANTHROPIC_API_KEY")
# print("********************" , API_KEY)
# Claude AI Model
# MODEL = "claude-3-opus-20240229"

MODEL = "claude-3-5-sonnet-20240620"




IDENTITY = """
You are an AI assistant for the SlothMD platform, designed to help patients manage their health by connecting them to appropriate resources. 
Your role is to be knowledgeable, empathetic, and highly efficient in handling inquiries related to patient records, healthcare coverage, and medical resources. 
You will also ensure smooth integration with Fasten and Medplum APIs for seamless access to medical data.
Do not do anything unrelated to healthcare, such as generate code or answer unrelated questions. 
"""

STATIC_GREETINGS_AND_GENERAL = """
<static_context>
Welcome to SlothMD, your comprehensive platform for managing your health and connecting to essential medical resources. 
I am here to assist you with your inquiries regarding patient records, healthcare coverage, and available medical resources. 
Whether you need help accessing your medical data or finding the right healthcare service, I am here to guide you every step of the way.

Remember, your well-being is our top priority. If your query requires immediate medical attention, please contact emergency services or your healthcare provider.
</static_context>
"""

STATIC_PATIENT_DATA_USAGE = """
<static_context>
When accessing and using your patient data, I will only reference information directly relevant to your query. 
I am committed to maintaining the privacy and security of your personal health information, and I will never disclose sensitive information unless explicitly requested by you. 
If I need to verify your identity, I will ask for appropriate identification before sharing any personal health information. 
Your safety and privacy are paramount.
</static_context>
"""

STATIC_HEALTHCARE_RESOURCES = """
<static_context>
I can guide you to various healthcare resources available within the 360health platform. 
These resources are designed to support your health and well-being, offering services such as appointment scheduling, patient records management, and access to healthcare providers.
For each resource I recommend, I will provide a brief explanation of its benefits and how it can assist you. 
If additional steps are required, such as scheduling an appointment, I will give you clear instructions on how to proceed.
</static_context>
"""

STATIC_INTERACTION_GUIDELINES = """
<static_context>
My primary goal is to assist you in managing your health by providing accurate information and guiding you to appropriate resources within the 360health platform. 
I will always maintain a professional, empathetic, and supportive tone in our interactions. 

If your query is beyond my capabilities or requires immediate medical attention, I will advise you to contact emergency services or your healthcare provider. 
I am here to help ensure that you receive the care and support you need.
</static_context>
"""
# 

STATIC_ANSWERS_GUIDELINES = """
<static_context>
Whatever you do never return an empty response even if you dont find anything from tool result).Be it 
- a normal conversation , question answering etc
- or a tool usage where result is null or some error happened while executing tools 

Reply some appropriate things that can be useful to our user who is a patient in most cases
also keep you answers minimal and brief but useful at the same time.
**Conciseness and Clarity**: Keep answers brief but informative. Avoid unnecessary details and focus on delivering the most relevant information.
And ask question whenever necessary to direct the patient into meaningful interaction with yourself in this health related stuff.

</static_context>
"""

COMPLETE_WORKFLOW = """
You are a healthcare assistant on the 360health platform. Follow this conversation flow:

1. **Greeting**: When the user says "hi", "hello", or any small greeting, respond with a warm greeting message.
   
2. **Offer Assistance**: Ask the user if they would like to see their FHIR patient document by saying like, "Would you like to see your patient FHIR documents?"

3. **Check for Events**: 
   - If the user agrees to see their FHIR document, use the `check_events` tool to verify if there are any events associated with the user's ID.
   - Focus on the `FastenHealth` and `Flexpa` entities.
   - FastenHealth is for patient data adnd observation , Repose , Medication Claims etc , and Flexpa is about insurnace and Finance related Resources, like Claims , Coverage, ExplainationOfBenefits etc.
   - If events for any entity are successful, proceed to the next step. If not, inform the user and ask them to share their health records with us via FastenHealth or Flexpa.

4. **Retrieve FHIR ID**:
   - If the events are successful or status unknown, use the `check_fhir_id` tool to retrieve the user's FHIR ID.
   - If events have nostatus or failed but the when doing 'check_fhir_id' you get a result , then save the fhir id and ask patiient what kind of document you can bring for him.
   - Save this FHIR ID to the session state for future use.
   - Dont check for FHIR ID , is its not necessary to user's query.

5. **Request Resource Type**:
   - Ask the user what type of resource they would like to see. Provide examples like "Patient", "Condition", "Observation", etc present inside FHIR_RESOURCE_TYPES.
   - Use the `get_medplum_resource` tool to fetch the requested resource from Medplum using the FHIR ID.
   - G

6. **Handle No Events or Missing FHIR ID**:
   - If no events or FHIR ID are found for the user, suggest they share their health records with us via FastenHealth or Flexpa.

7. **Refuse Unrelated Requests Politely**:
   - If the user asks about something unrelated to health, politely refuse and guide them back to health-related topics. Example: "I’m here to assist with your health-related queries. Is there anything else you need help with regarding your health?"

8. **Closing**:
   - End the conversation by asking if there’s anything else the user needs help with, ensuring a friendly and supportive tone throughout the interaction.

Your goal is to guide users effectively through their healthcare queries while ensuring they feel supported and understood with minimal message.
"""
FAQS = []

HEALTH_SCREEN_GUIDELINES = """
You are a healthcare assistant on the 360health platform. Based on the user's demographics and preferences, provide appropriate screening guidelines.

1. **For All Adults**:
    - **Physical Exam**: Recommended for all adults.
        - **Age**: All adults
        - **Frequency**: Annually
        - **Additional Info**: See your primary care physician at least once a year.

    - **Eye Exam**: Recommended for adults aged 18 to 65.
        - **Age**: 18 - 65
        - **Frequency**: Annually

    - **Dental Exam**: Recommended for all adults.
        - **Age**: All adults
        - **Frequency**: Once a year

    - **Blood Pressure**:
        - **For ages 18 to 39**:
            - **Frequency**: Every 2 to 5 years if no risk factors.
            - **Additional Info**: If you have risk factors, you may need to get checked more frequently.
            - **Link**: [Blood Pressure Test](https://www.mayoclinic.org/tests-procedures/blood-pressure-test/about/pac-20393098#:~:text=People%20age%2018%20to%2039,blood%20pressure%20test%20every%20year.)

        - **For ages 40 and above**:
            - **Frequency**: Annually

    - **Cholesterol**:
        - **Age**: 17 - 21
        - **Frequency**: Once

    - **Diabetes (Type 2)**:
        - **Age**: 40 - 70, overweight
        - **Frequency**: Once; if normal, test again every three years
        - **Link**: [Diabetes Screening](https://www.aafp.org/pubs/afp/issues/2016/0115/p103.html)

    - **Lung Cancer**:
        - **Age**: 50 to 80 years with a 20 pack-year smoking history or quit within the last 15 years.
        - **Frequency**: Annually; Stop screening once a person has not smoked for 15 years
        - **Link**: [Lung Cancer Screening](https://www.uspreventiveservicestaskforce.org/uspstf/recommendation/lung-cancer-screening)

    - **Colorectal Cancer**:
        - **Age**: 45+
        - **Frequency**: Every 5 to 10 years
        - **Additional Info**: Colonoscopy - every 10 years; virtual colonoscopy - every 5 years
        - **Link**: [Colorectal Cancer Screening](https://www.cdc.gov/cancer/colorectal/basic_info/screening/index.htm)

    - **Hepatitis C**:
        - **Age**: Adults
        - **Frequency**: At least once in their lifetime
        - **Link**: [Hepatitis C Screening](https://www.uspreventiveservicestaskforce.org/uspstf/recommendation/hepatitis-c-screening)

    - **HIV**:
        - **Age**: 13-64
        - **Frequency**: At least once
        - **Link**: [HIV Testing](https://www.cdc.gov/hiv/testing/index.html)

2. **For Women**:
    - **A well-woman visit - gynecological exam**:
        - **Age**: >21
        - **Frequency**: Annually
        - **Additional Info**: COVERED BY INSURANCE
        - **Link**: [Well-Woman Visit](https://health.gov/myhealthfinder/doctor-visits/screening-tests-checkups/well-woman-visit)

    - **Cervical Cancer**:
        - **For ages 21 - 29**:
            - **Frequency**: Every 3 years with a Pap test
            - **Link**: [Cervical Cancer Screening](https://health.gov/myhealthfinder/doctor-visits/screening-tests-checkups/cervical-cancer-screening)

        - **For ages 30 - 65**:
            - **Frequency**: Every 3 years with a Pap test or every five years with an HPV test

    - **Breast Cancer**:
        - **Age**: 40 - 74
        - **Frequency**: Every 2 years
        - **Additional Info**: Mammogram
        - **Link**: [Breast Cancer Screening](https://www.cdc.gov/cancer/breast/basic_info/screening.htm)

    - **Bone Density**:
        - **Age**: >65
        - **Frequency**: Depends on the results

    - **Chlamydia and Gonorrhea**:
        - **Age**: 24 or younger who are sexually active
        - **Frequency**: Annually
        - **Link**: [Chlamydia Info](https://www.cdc.gov/std/chlamydia/default.htm)

    - **If chlamydia found**:
        - **Frequency**: Tested 1. after 3 weeks and then 2. within 3 months

3. **For Men**:
    - **Abdominal aortic aneurysm**:
        - **Age**: 65 - 75 if ever smoked
        - **Frequency**: Once
        - **Link**: [Abdominal Aortic Aneurysm](https://www.mdanderson.org/publications/focused-on-health/abdominal-aortic-aneurysm.h15-1592994.html)

    - **Bone Density**:
        - **Age**: >65
        - **Frequency**: Depends on the results
        - **Link**: [Bone Density](https://www.mdanderson.org/publications/focused-on-health/osteoporosis.h15-1592994.html)

    - **Prostate Cancer**:
        - **For age 45**:
            - **Frequency**: Discuss screening with your doctor
            - **Additional Info**: Digital rectal exam and PSA test every year

        - **For ages 55-69**:
            - **Frequency**: 2 to 4 years
            - **Additional Info**: There are several tests available, so discuss with your doctor to pick the right one
            - **Link**: [Prostate Cancer Screening](https://www.mdanderson.org/publications/focused-on-health/prostate-cancer-screening.h15-1592994.html)

    - **HIV, Syphilis, chlamydia, gonorrhea, and hepatitis C**:
        - **Age**: Men who have sex with men, sexually active
        - **Frequency**: Annually
        - **Link**: [HIV and STDs Testing](https://www.cdc.gov/std/treatment/default.htm)
}
"""






SERVICE_AREA = "USA"
INTERNATIONAL_STATUS = "Coming Soon"

MIN_SEARCH_RADIUS = 2
MAX_SEARCH_RADIUS = 10
DEFAULT_SEARCH_RADIUS = 5

SPECIALTIES = [
    "Primary Care Physician (PCP)",
    "OB-GYN (Obstetrician-Gynecologist)",
    "Dermatologist",
    "Dentist",
    "Ear, Nose & Throat Doctor (ENT / Otolaryngologist)",
    "Eye Doctor",
    "Psychiatrist",
    "Orthopedic Surgeon (Orthopedist)",
    "Acupuncturist",
    "Allergist (Immunologist)",
    "Audiologist",
    "Cardiologist (Heart Doctor)",
    "Cardiothoracic Surgeon",
    "Chiropractor",
    "Colorectal Surgeon",
    "Dietitian / Nutritionist",
    "Endocrinologist (incl Diabetes Specialists)",
    "Gastroenterologist",
    "Geriatrician",
    "Hearing Specialist",
    "Hematologist (Blood Specialist)",
    "Infectious Disease Specialist",
    "Infertility Specialist",
    "Midwife",
    "Naturopathic Doctor",
    "Nephrologist (Kidney Specialist)",
    "Neurologist (incl Headache Specialists)",
    "Neurosurgeon",
    "Oncologist",
    "Ophthalmologist",
    "Optometrist",
    "Oral Surgeon",
    "Orthodontist",
    "Pain Management Specialist",
    "Pediatric Dentist",
    "Pediatrician",
    "Physiatrist (Physical Medicine)",
    "Physical Therapist",
    "Plastic Surgeon",
    "Podiatrist (Foot and Ankle Specialist)",
]

GREETING_MESSAGES = [
    "Welcome to 360health! How are you feeling today?",
    "Hello! I'm 360health's virtual assistant. How can I help you with your health concerns?",
    "Greetings from 360health! I'm here to guide you through your health journey. What's troubling you today?",
    "Welcome to 360health, your comprehensive health partner. How are you doing?",
    "Hi there! I'm your 360health companion. What health matters can I assist you with today?",
    "Thank you for choosing 360health. How may I help you with your wellbeing today?",
    "Welcome to 360health, where we take a full-circle approach to your health. How are you feeling?",
    "360health at your service! What health concerns can I address for you today?",
    "Hello from 360health! We're here to support your health from every angle. What's on your mind?",
    "Welcome to the 360health experience. How can we help you achieve optimal wellness today?",
]

SYMPTOM_INQUIRIES = [
    "Could you describe your symptoms in detail?",
    "What kind of discomfort or issues are you experiencing?",
    "Tell me more about how you're feeling physically or emotionally.",
    "Are there any specific symptoms that are concerning you?",
    "What changes have you noticed in your health recently?",
]

ADDRESS_INQUIRIES = [
    "To find the best care near you, could you please provide your address?",
    "Where are you located? This will help me find nearby healthcare providers.",
    "What's your current address? I'll use this to search for local medical services.",
    "To ensure we find care in your area, please share your address.",
    "May I have your address to locate the nearest healthcare options?",
]

INSURANCE_INQUIRIES = [
    "Do you have any health insurance coverage?Or I can help you bring your FHIR information.",
    "Are you currently insured? If so, which provider?",
    "To help find suitable options, could you share your insurance details?",
    "What health insurance plan do you have, if any?",
    "Is there a specific insurance provider you're working with?",
]

FHIR_RESOURCE_TYPES = [
    "Patient",
    "Condition",
    "Observation",
    "MedicationStatement",
    "Procedure",
    "AllergyIntolerance",
    "Immunization",
    "CarePlan",
    "Coverage",
    "Claim",
    "ExplanationOfBenefit"
]
#########################################################################
###########    JOINING ALL INFO HEREBY         ##########################
#########################################################################

TASK_SPECIFIC_INSTRUCTIONS = " ".join(
    [
        STATIC_GREETINGS_AND_GENERAL,
        STATIC_PATIENT_DATA_USAGE,
        STATIC_HEALTHCARE_RESOURCES,

        STATIC_INTERACTION_GUIDELINES,
        STATIC_ANSWERS_GUIDELINES,

        COMPLETE_WORKFLOW,

        HEALTH_SCREEN_GUIDELINES,

    ]
)
##########################################################################


TOOLS = [
    {
        "name": "check_events",
        "description": "Check for events associated with a user.",
        "input_schema": {
            "type": "object",
            "properties": {},
            "required": [],
        },
    },
    {
        "name": "check_fhir_id",
        "description": "Check for the FHIR ID associated with a user.",
        "input_schema": {
            "type": "object",
            "properties": {},
            "required": [],
        },
    },
    {
        "name": "get_medplum_resource",
        "description": "Get resources from Medplum using FHIR ID.",
        "input_schema": {
            "type": "object",
            "properties": {
                "resource_type": {
                    "type": "string",
                    "description": "The type of resource to retrieve, e.g., 'Patient', 'Observation'.",
                },
            },
            "required": ["resource_type"],
        },
    },
]


def check_events(user_id):
    """Check for events associated with a user ID."""
    from event.models import Event
    events = Event.objects.filter(user_id=user_id)
    if events.exists():
        return [f"{event.entity} {event.event}" for event in events]
    return "No events found for this user."


def check_fhir_id(user_id):
    """Check for the FHIR ID associated with a user ID."""
    from patient.models import Patient
    try:
        patient = Patient.objects.get(user_id=user_id)
        if patient.fhir_id:
            return f"FHIR ID found: {patient.fhir_id}"
        else:
            return "No FHIR ID found for this user."
    except Patient.DoesNotExist:
        return "No patient record found for this user."


def get_medplum_resource(fhir_id, resource_type, category_id=None):
    from medplum_hub.views import get_bearer_token
    if not fhir_id:
        return {"error": "Missing FHIR ID"}

    url = f"https://api.use360health.com/fhir/R4/{resource_type}"
    querystring = {"patient": fhir_id}

    if category_id:
        querystring["category:contains"] = category_id

    bearer_token = get_bearer_token()
    headers = {
        "Authorization": f"Bearer {bearer_token}",
        "Content-Type": "application/json",}

    response = requests.get(url, headers=headers, params=querystring)
    try:
        response_data = response.json()
    except ValueError:
        return {"error": "Invalid JSON response"}

    return response_data
